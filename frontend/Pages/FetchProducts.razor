@page "/fetchproducts"
@using System.Text.Json
@inject HttpClient Http

<h3>Product List</h3>
<ul>
    @if (products != null)
    {
        foreach (var product in products)
        {
            <li>@product.Name - $@product.Price (@product.Category?.Name)</li>
        }
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <li>@errorMessage</li>
    }
    else
    {
        <li>Loading...</li>
    }
</ul>

@code
{
    private Product[]? products;
    private string? errorMessage;
    private static Product[]? cachedProducts;

    protected override async Task OnInitializedAsync()
    {
        if (cachedProducts != null)
        {
            products = cachedProducts;
            return;
        }
        try
        {
            var response = await Http.GetAsync("/api/productlist");
            response.EnsureSuccessStatusCode();
            var json = await response.Content.ReadAsStringAsync();
            cachedProducts = products = JsonSerializer.Deserialize<Product[]>(json, new JsonSerializerOptions
            {
                PropertyNameCaseInsensitive = true
            });
        }
        catch (Exception ex)
        {
            errorMessage = $"Unexpected Error: {ex.Message}";
        }
    }

    public class Product
    {
        public int Id { get; set; }
        public string? Name { get; set; }
        public double Price { get; set; }
        public int Stock { get; set; }
        public Category? Category { get; set; }
    }

    public class Category
    {
        public int Id { get; set; }
        public string? Name { get; set; }
    }
}